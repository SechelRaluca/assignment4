
package implementation;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminServiceImpl", targetNamespace = "http://implementation/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminServiceImpl {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns implementation.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://implementation/", className = "implementation.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://implementation/", className = "implementation.LoginResponse")
    @Action(input = "http://implementation/AdminServiceImpl/loginRequest", output = "http://implementation/AdminServiceImpl/loginResponse")
    public User login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns implementation.Packagee
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPackage", targetNamespace = "http://implementation/", className = "implementation.AddPackage")
    @ResponseWrapper(localName = "addPackageResponse", targetNamespace = "http://implementation/", className = "implementation.AddPackageResponse")
    @Action(input = "http://implementation/AdminServiceImpl/addPackageRequest", output = "http://implementation/AdminServiceImpl/addPackageResponse")
    public Packagee addPackage(
        @WebParam(name = "arg0", targetNamespace = "")
        Packagee arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removePackage", targetNamespace = "http://implementation/", className = "implementation.RemovePackage")
    @ResponseWrapper(localName = "removePackageResponse", targetNamespace = "http://implementation/", className = "implementation.RemovePackageResponse")
    @Action(input = "http://implementation/AdminServiceImpl/removePackageRequest", output = "http://implementation/AdminServiceImpl/removePackageResponse")
    public void removePackage(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "registerPackage", targetNamespace = "http://implementation/", className = "implementation.RegisterPackage")
    @ResponseWrapper(localName = "registerPackageResponse", targetNamespace = "http://implementation/", className = "implementation.RegisterPackageResponse")
    @Action(input = "http://implementation/AdminServiceImpl/registerPackageRequest", output = "http://implementation/AdminServiceImpl/registerPackageResponse")
    public void registerPackage(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns implementation.Packagee
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStatus", targetNamespace = "http://implementation/", className = "implementation.UpdateStatus")
    @ResponseWrapper(localName = "updateStatusResponse", targetNamespace = "http://implementation/", className = "implementation.UpdateStatusResponse")
    @Action(input = "http://implementation/AdminServiceImpl/updateStatusRequest", output = "http://implementation/AdminServiceImpl/updateStatusResponse")
    public Packagee updateStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        RoutePair arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Packagee arg1);

    /**
     * 
     * @return
     *     returns java.util.List<implementation.Packagee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPackages", targetNamespace = "http://implementation/", className = "implementation.GetAllPackages")
    @ResponseWrapper(localName = "getAllPackagesResponse", targetNamespace = "http://implementation/", className = "implementation.GetAllPackagesResponse")
    @Action(input = "http://implementation/AdminServiceImpl/getAllPackagesRequest", output = "http://implementation/AdminServiceImpl/getAllPackagesResponse")
    public List<Packagee> getAllPackages();

    /**
     * 
     * @return
     *     returns java.util.List<implementation.Route>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRoutes", targetNamespace = "http://implementation/", className = "implementation.GetAllRoutes")
    @ResponseWrapper(localName = "getAllRoutesResponse", targetNamespace = "http://implementation/", className = "implementation.GetAllRoutesResponse")
    @Action(input = "http://implementation/AdminServiceImpl/getAllRoutesRequest", output = "http://implementation/AdminServiceImpl/getAllRoutesResponse")
    public List<Route> getAllRoutes();

    /**
     * 
     * @param arg0
     * @return
     *     returns implementation.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserByName", targetNamespace = "http://implementation/", className = "implementation.GetUserByName")
    @ResponseWrapper(localName = "getUserByNameResponse", targetNamespace = "http://implementation/", className = "implementation.GetUserByNameResponse")
    @Action(input = "http://implementation/AdminServiceImpl/getUserByNameRequest", output = "http://implementation/AdminServiceImpl/getUserByNameResponse")
    public User getUserByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns implementation.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserById", targetNamespace = "http://implementation/", className = "implementation.GetUserById")
    @ResponseWrapper(localName = "getUserByIdResponse", targetNamespace = "http://implementation/", className = "implementation.GetUserByIdResponse")
    @Action(input = "http://implementation/AdminServiceImpl/getUserByIdRequest", output = "http://implementation/AdminServiceImpl/getUserByIdResponse")
    public User getUserById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
